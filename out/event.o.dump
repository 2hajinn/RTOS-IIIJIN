
out/event.o:     file format elf32-littlearm


Disassembly of section .text.Kernel_event_flag_init:

00000000 <Kernel_event_flag_init>:
   0:	2200      	movs	r2, #0
   2:	4b01      	ldr	r3, [pc, #4]	; (8 <Kernel_event_flag_init+0x8>)
   4:	601a      	str	r2, [r3, #0]
   6:	4770      	bx	lr
   8:	00000000 	.word	0x00000000

Disassembly of section .text.Kernel_event_flag_set:

00000000 <Kernel_event_flag_set>:
   0:	4a02      	ldr	r2, [pc, #8]	; (c <Kernel_event_flag_set+0xc>)
   2:	6813      	ldr	r3, [r2, #0]
   4:	4303      	orrs	r3, r0
   6:	6013      	str	r3, [r2, #0]
   8:	4770      	bx	lr
   a:	bf00      	nop
   c:	00000000 	.word	0x00000000

Disassembly of section .text.Kernel_event_flag_clear:

00000000 <Kernel_event_flag_clear>:
   0:	4a02      	ldr	r2, [pc, #8]	; (c <Kernel_event_flag_clear+0xc>)
   2:	6813      	ldr	r3, [r2, #0]
   4:	ea23 0300 	bic.w	r3, r3, r0
   8:	6013      	str	r3, [r2, #0]
   a:	4770      	bx	lr
   c:	00000000 	.word	0x00000000

Disassembly of section .text.Kernel_event_flag_check:

00000000 <Kernel_event_flag_check>:
   0:	b508      	push	{r3, lr}
   2:	4b05      	ldr	r3, [pc, #20]	; (18 <Kernel_event_flag_check+0x18>)
   4:	681b      	ldr	r3, [r3, #0]
   6:	4003      	ands	r3, r0
   8:	d003      	beq.n	12 <Kernel_event_flag_check+0x12>
   a:	f7ff fffe 	bl	0 <Kernel_event_flag_check>
   e:	2001      	movs	r0, #1
  10:	bd08      	pop	{r3, pc}
  12:	4618      	mov	r0, r3
  14:	e7fc      	b.n	10 <Kernel_event_flag_check+0x10>
  16:	bf00      	nop
  18:	00000000 	.word	0x00000000
